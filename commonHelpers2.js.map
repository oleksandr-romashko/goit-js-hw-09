{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst TIME_INTERVAL = 1000;\nlet intervalId;\n\nconst elements = {\n  picker: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\nelements.startBtn.disabled = true;\nelements.startBtn.addEventListener('click', onStartClick);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (new Date(selectedDates[0]) <= Date.now()) {\n      elements.startBtn.toggleAttribute('disabled', true);\n      notifyPastTimedate();\n    } else {\n      elements.startBtn.toggleAttribute('disabled', false);\n    }\n  },\n};\nconst picker = flatpickr('#datetime-picker', options);\n\n/**\n * * Handles start timer button click\n * @returns\n */\nfunction onStartClick() {\n  const between = picker.selectedDates[0].getTime() - Date.now();\n  if (between <= 0) {\n    notifyPastTimedate();\n    return;\n  }\n  elements.picker.disabled = true;\n  elements.startBtn.disabled = true;\n  updateTimer();\n\n  intervalId = setInterval(updateTimer, TIME_INTERVAL);\n}\n\n/**\n * * Creates object of timedate values.\n * @param {number} ms Value of time in ms.\n * @returns {object} Object of timedate values.\n */\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n/**\n * * Updates on page timer html elements whith new remaining time\n * @param {object} time time object, consisting of days, hours, minutes and seconds values.\n */\nfunction updateTimer() {\n  let between = picker.latestSelectedDateObj.getTime() - Date.now();\n  if (between <= TIME_INTERVAL) {\n    clearInterval(intervalId);\n    between = 0;\n  }\n  const timeObj = convertMs(between);\n  writeTime(timeObj);\n}\n\nfunction writeTime(time) {\n  elements.days.textContent = addLeadingZero(time.days);\n  elements.hours.textContent = addLeadingZero(time.hours);\n  elements.minutes.textContent = addLeadingZero(time.minutes);\n  elements.seconds.textContent = addLeadingZero(time.seconds);\n}\n\n/**\n * * Adds leading zeros in value has only one digit.\n * @param {number} value value to convert.\n * @returns {string | number} String with added leading zeros or value itself.\n */\nfunction addLeadingZero(value) {\n  return value < 10 ? String(value).padStart(2, '0') : value;\n}\n\n/**\n * * Notifies about selected timedate is in the past.\n */\nfunction notifyPastTimedate() {\n  iziToast.warning({\n    position: 'topRight',\n    message: 'Please choose a date in the future',\n    maxWidth: '380',\n    messageSize: '18',\n    backgroundColor: '#fd4b3f',\n    messageColor: '#fafafa',\n    iconUrl: '/src/img/cross-icon.svg.svg',\n    close: false,\n    closeOnClick: false,\n    timeout: '2500',\n    pauseOnHover: true,\n    progressBar: false,\n    transitionIn: 'fadeIn',\n    transitionOut: 'fadeOut',\n  });\n}\n"],"names":["TIME_INTERVAL","intervalId","elements","onStartClick","options","selectedDates","notifyPastTimedate","picker","flatpickr","updateTimer","convertMs","ms","days","hours","minutes","seconds","between","timeObj","writeTime","time","addLeadingZero","value","iziToast"],"mappings":"0IAKA,MAAMA,EAAgB,IACtB,IAAIC,EAEJ,MAAMC,EAAW,CACf,OAAQ,SAAS,cAAc,kBAAkB,EACjD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EACAA,EAAS,SAAS,SAAW,GAC7BA,EAAS,SAAS,iBAAiB,QAASC,CAAY,EAExD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjB,IAAI,KAAKA,EAAc,CAAC,CAAC,GAAK,KAAK,OACrCH,EAAS,SAAS,gBAAgB,WAAY,EAAI,EAClDI,KAEAJ,EAAS,SAAS,gBAAgB,WAAY,EAAK,CAEtD,CACH,EACMK,EAASC,EAAU,mBAAoBJ,CAAO,EAMpD,SAASD,GAAe,CAEtB,GADgBI,EAAO,cAAc,CAAC,EAAE,QAAS,EAAG,KAAK,OAC1C,EAAG,CAChBD,IACA,MACD,CACDJ,EAAS,OAAO,SAAW,GAC3BA,EAAS,SAAS,SAAW,GAC7BO,IAEAR,EAAa,YAAYQ,EAAaT,CAAa,CACrD,CAOA,SAASU,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAMA,SAASN,GAAc,CACrB,IAAIO,EAAUT,EAAO,sBAAsB,QAAO,EAAK,KAAK,MACxDS,GAAWhB,IACb,cAAcC,CAAU,EACxBe,EAAU,GAEZ,MAAMC,EAAUP,EAAUM,CAAO,EACjCE,EAAUD,CAAO,CACnB,CAEA,SAASC,EAAUC,EAAM,CACvBjB,EAAS,KAAK,YAAckB,EAAeD,EAAK,IAAI,EACpDjB,EAAS,MAAM,YAAckB,EAAeD,EAAK,KAAK,EACtDjB,EAAS,QAAQ,YAAckB,EAAeD,EAAK,OAAO,EAC1DjB,EAAS,QAAQ,YAAckB,EAAeD,EAAK,OAAO,CAC5D,CAOA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAAIA,CACvD,CAKA,SAASf,GAAqB,CAC5BgB,EAAS,QAAQ,CACf,SAAU,WACV,QAAS,qCACT,SAAU,MACV,YAAa,KACb,gBAAiB,UACjB,aAAc,UACd,QAAS,8BACT,MAAO,GACP,aAAc,GACd,QAAS,OACT,aAAc,GACd,YAAa,GACb,aAAc,SACd,cAAe,SACnB,CAAG,CACH"}